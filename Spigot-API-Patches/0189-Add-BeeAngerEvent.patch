From 38955165ce93410660d623132cc5b3175f2d377f Mon Sep 17 00:00:00 2001
From: Andre <andrepleblanc@gmail.com>
Date: Tue, 17 Dec 2019 16:49:40 -0500
Subject: [PATCH] Add BeeAngerEvent


diff --git a/src/main/java/com/destroystokyo/paper/event/entity/BeeAngerEvent.java b/src/main/java/com/destroystokyo/paper/event/entity/BeeAngerEvent.java
new file mode 100644
index 00000000..f062d66e
--- /dev/null
+++ b/src/main/java/com/destroystokyo/paper/event/entity/BeeAngerEvent.java
@@ -0,0 +1,86 @@
+package com.destroystokyo.paper.event.entity;
+
+import org.bukkit.entity.Bee;
+import org.bukkit.entity.Entity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+/**
+ * Called when a Bee is angered by another entity.
+ * <p>
+ * If the event is cancelled, the bee will not be angered.
+ */
+public class BeeAngerEvent extends EntityEvent implements Cancellable {
+
+    private static final HandlerList handlers = new HandlerList();
+    private boolean canceled;
+    private final Entity target;
+    private int newAnger;
+
+    public BeeAngerEvent(@NotNull final Bee bee, @Nullable final Entity target, final int newAnger) {
+        super(bee);
+        this.target = target;
+        this.newAnger = newAnger;
+    }
+
+    /**
+     * Gets the entity (if any) which triggered this anger update.
+     *
+     * @return triggering entity, or null
+     */
+    @Nullable
+    public Entity getTarget() {
+        return target;
+    }
+
+    /**
+     * Gets the new anger resulting from this event.
+     *
+     * @return new anger
+     * @see Bee#getAnger()
+     */
+    public int getNewAnger() {
+        return newAnger;
+    }
+
+    /**
+     * Sets the new anger resulting from this event.
+     *
+     * @param newAnger the new anger
+     * @see Bee#setAnger(int)
+     */
+    public void setNewAnger(int newAnger) {
+        this.newAnger = newAnger;
+    }
+
+    @NotNull
+    @Override
+    public Bee getEntity() {
+        return (Bee) entity;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return canceled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        canceled = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
+
-- 
2.23.0

